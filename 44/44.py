'''
Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their
sum and difference are pentagonal and D = |Pk − Pj| is minimised;
what is the value of D?

'''
from my_modules import math as m

R = 10000
pent_numbers = m.nth_pentagonal_numbers(R)
min_diff = 99999999999999
for j in range(R - 1):
    for k in range(j + 1, R):
        if (m.is_pentagonal_number(pent_numbers[k] + pent_numbers[j]) and
            m.is_pentagonal_number(pent_numbers[k] - pent_numbers[j]) and
            abs(pent_numbers[k] - pent_numbers[j]) < min_diff):
            min_diff = abs(pent_numbers[k] - pent_numbers[j])
            print(f"Pj is: {pent_numbers[j]}  Pk is: {pent_numbers[k]}  D is: {min_diff}")
print("### --- " + str(min_diff))
